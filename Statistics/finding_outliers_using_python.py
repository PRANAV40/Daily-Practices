# -*- coding: utf-8 -*-
"""Finding Outliers Using Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gSGka0dNUU9wIoxr-3Z7COlemVWP2mW6
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

# Define our dataset
dataset = [11,10,12,14,12,15,14,13,15, 102, 12,14,17,19,107,10,13,12,14,12,108,12,11,14,13,15,10,15,12,10,14,13,15,10]

plt.hist(dataset)

#Z-score
outliers = []
def detact_outliers(data):
  threshold = 3  #3rd standard deviation
  mean = np.mean(data)
  std = np.std(data)

  for i in data:
    z_score = (i-mean)/std
    if np.abs(z_score) > threshold:
      outliers.append(i)
  return outliers

detact_outliers(dataset)

"""## IQR (Inter Quartile Range)
1. Sort the data
2. Calculate Q1(25%) and Q3(75%)
3. IQR (Q3-Q1)
4. Find the lower Fence(q1 - 1.5(IQR))
5. Find the higher Fence(q1 + 1.5(IQR))
"""

dataset = sorted(dataset)

dataset

#Calculate Q1 and Q3
q1,q3 = np.percentile(dataset,[25,75])
print(q1,q3)

# Calculate IQR
iqr = q3-q1
print(iqr)

#Find the lower Fence and upper fence
lower_fence = q1 - (1.5*iqr)
higher_fence = q3 + (1.5*iqr)
print(lower_fence,higher_fence)

import seaborn as sns

sns.boxplot(dataset)

